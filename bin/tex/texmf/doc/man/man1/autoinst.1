.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.16)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "AUTOINST 1"
.TH AUTOINST 1 "2012-10-25" "fontools" "Marc Penninga"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
autoinst \- wrapper around the LCDF TypeTools,
for installing OpenType fonts in LaTeX.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBautoinst\fR [\fIoptions\fR] \fBfont(s)\fR
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Eddie Kohler's \fITypeTools\fR, especially \fIotftotfm\fR, are superb tools
for installing OpenType fonts in LaTeX, but their use
(even in automatic mode) is complicated: they need many long
command lines and don't generate the \fIfd\fR and \fIsty\fR files LaTeX needs.
\&\fBautoinst\fR simplifies the font installation process with \fIotftotfm\fR
by generating and executing all command lines
and by creating and installing all \fIfd\fR and \fIsty\fR files.
.PP
Given a family of font files (in either \fIotf\fR or \fIttf\fR format),
\&\fBautoinst\fR will create several LaTeX font families:
.RS 2
.IP "\-" 3
Four text families (with lining and oldstyle digits, in both tabular 
and proportional variants), each with the following shapes:
.RS 3
.RS 2
.IP "\fIn\fR" 6
.IX Item "n"
Roman text
.IP "\fIsc\fR" 6
.IX Item "sc"
Small caps
.IP "\fInw\fR" 6
.IX Item "nw"
\&\*(L"Upright swash\*(R"; usually normal text with some extra \*(L"oldstyle\*(R" ligatures,
such as ct, sp and st.
.IP "\fItl\fR" 6
.IX Item "tl"
Titling shape. Meant for all-caps text only (even though it sometimes contains
lowercase glyphs as well), where letterspacing and the positioning of
punctuation characters have been adjusted to suit all-caps text.
This shape is generated only for the families with lining digits, since
all-caps text doesn't mix with old-style digits.
.IP "\fIit\fR" 6
.IX Item "it"
Italic (or oblique) text
.IP "\fIscit\fR" 6
.IX Item "scit"
Italic small caps
.IP "\fIsw\fR" 6
.IX Item "sw"
Swash
.IP "\fItlit\fR" 6
.IX Item "tlit"
Italic titling
.RE
.RS 2
.RE
.RE
.RS 3
.RE
.IP "\-" 3
For each text family: a family of TS1\-encoded symbol fonts,
in roman and italic shapes.
.IP "\-" 3
Four families with superiors, inferiors, numerators and denominators,
in roman and italic shapes.
.IP "\-" 3
An ornament family, in roman and italic shapes.
.RE
.RS 2
.RE
.PP
Of course, if the fonts don't contain oldstyle digits, small caps etc.,
the corresponding shapes and families are not created.
Furthermore, the creation of most families and shapes can be controlled by
command-line options (see \*(L"COMMAND-LINE \s-1OPTIONS\s0\*(R" below).
.PP
The generated font families are named \fI<FontFamily>\-<Suffix>\fR,
where \fI<Suffix>\fR is one of
.IP "\fI\s-1LF\s0\fR" 8
.IX Item "LF"
proportional (i.e., figures have varying widths) lining figures
.IP "\fI\s-1TLF\s0\fR" 8
.IX Item "TLF"
tabular (i.e., all figures have the same width) lining figures
.IP "\fIOsF\fR" 8
.IX Item "OsF"
proportional oldstyle figures
.IP "\fITOsF\fR" 8
.IX Item "TOsF"
tabular oldstyle figures
.IP "\fISup\fR" 8
.IX Item "Sup"
superior characters (many fonts have only an incomplete set of superior
characters: digits, some punctuation and the letters \fIabdeilmnorst\fR;
normal forms will then be used for the other characters)
.IP "\fIInf\fR" 8
.IX Item "Inf"
inferior characters; usually only digits and punctuation,
normal forms for the other characters
.IP "\fIOrn\fR" 8
.IX Item "Orn"
ornaments
.IP "\fINumr\fR" 8
.IX Item "Numr"
numerators
.IP "\fIDnom\fR" 8
.IX Item "Dnom"
denominators
.PP
The generated fonts are named \fI<FontName>\-<suffix>\-<shape>\-<enc>\fR,
where \fI<suffix>\fR is the same as above (but in lowercase),
\&\fI<shape>\fR is either empty, \*(L"sc\*(R", \*(L"swash\*(R" or \*(L"titling\*(R",
and \fI<enc>\fR is the encoding.
A typical name in this scheme would be \*(L"MinionPro\-Regular\-osf\-sc\-ly1\*(R".
.SS "On the choice of text encoding"
.IX Subsection "On the choice of text encoding"
By default, \fBautoinst\fR generates text fonts with \s-1OT1\s0, T1 and \s-1LY1\s0
encodings, and the generated style files use \s-1LY1\s0 as the default text encoding.
\&\s-1LY1\s0 has been chosen over T1 because it has some empty slots to accomodate
the additional ligatures and alternate glyphs provided by many OpenType fonts.
Different encodings can be selected using the \fI\-encoding\fR
command-line option (see \*(L"COMMAND-LINE \s-1OPTIONS\s0\*(R" below).
.SS "Using the fonts in your LaTeX documents"
.IX Subsection "Using the fonts in your LaTeX documents"
\&\fBautoinst\fR generates a style file for using the font in LaTeX documents,
named \fI<FontFamily>.sty\fR. This style file also takes care of loading the
\&\fIfontenc\fR and \fItextcomp\fR packages, if necessary.
To use the font, simply put \f(CW\*(C`\eusepackage{\f(CI<FontFamily>\f(CW}\*(C'\fR
in the preamble of your document.
.PP
This style file defines a number of options:
.IP "\fIlining, oldstyle, tabular, proportional\fR" 4
.IX Item "lining, oldstyle, tabular, proportional"
Choose which digits will be used for the text fonts.
The defaults are \*(L"oldstyle\*(R" and \*(L"proportional\*(R" (if available).
.IP "\fIultrablack, ultrabold, heavy, extrablack, black, extrabold, demibold, semibold, bold\fR" 4
.IX Item "ultrablack, ultrabold, heavy, extrablack, black, extrabold, demibold, semibold, bold"
Choose the weight that LaTeX will use for the \*(L"bold\*(R" weight
(i.e., the value of \f(CW\*(C`\ebfdefault\*(C'\fR).
.IP "\fIlight, medium, regular\fR" 4
.IX Item "light, medium, regular"
Choose the weight that LaTeX will use for the \*(L"regular\*(R" weight
(i.e., the value of \f(CW\*(C`\emddefault\*(C'\fR).
.IP "\fIscaled=<scale>\fR" 4
.IX Item "scaled=<scale>"
Scale the font by a factor of \fI<scale>\fR.
For example: to increase the size of the font by 5%, use the command
\&\f(CW\*(C`\eusepackage[scaled=1.05]{\f(CI<FontFamily>\f(CW}\*(C'\fR.
.Sp
This option is only available when the \fIxkeyval\fR package is found
in your TeX installation.
.PP
The style file will also try to load the \fIfontaxes\fR package,
which gives easy access to various font shapes and styles.
It is available from \s-1CTAN\s0
(\fIhttp://www.ctan.org/tex\-archive/macros/latex/contrib/fontaxes\fR).
Using the machinery set up by \fIfontaxes\fR, the generated style file also
defines a number of commands (which take the text to be typeset as argument)
and declarations (which don't take arguments, but affect all text up to
the end of the current group) of its own:
.PP
.Vb 1
\&    DECLARATION     COMMAND         SHORT FORM OF COMMAND
\&
\&    \etlshape        \etexttitling    \etexttl
\&    \esufigures      \etextsuperior   \etextsu
\&    \einfigures      \etextinferior   \etextin
.Ve
.PP
In addition, the \f(CW\*(C`\eswshape\*(C'\fR and \f(CW\*(C`\etextsw\*(C'\fR commands are redefined to place
swash on the secondary shape axis (\fIfontaxes\fR places it on the primary
shape axis); this makes these commands behave properly when nested, so that
\&\f(CW\*(C`\eswshape\eupshape\*(C'\fR will give upright swash.
.PP
There are no commands for accessing the numerator and denominator
fonts; these can be selected using \fIfontaxes\fR' standard commands,
e.g., \f(CW\*(C`\efontfigurestyle{numerator}\eselectfont\*(C'\fR.
.PP
The style file also provides a command \f(CW\*(C`\eornament{\f(CI<number>\f(CW}\*(C'\fR,
where \f(CW\*(C`\f(CI<number>\f(CW\*(C'\fR is a number from 0 to the total number of
ornaments minus one. Ornaments are always typeset using the current family,
series and shape. A list of all ornaments in a font can be created by
running LaTeX on the file \fInfssfont.tex\fR (part of a standard
LaTeX installation) and supplying the name of the ornament font.
.PP
To access the ornaments, \fBautoinst\fR creates a font-specific encoding file
\&\fI<FontFamily>_orn.enc\fR, but only if that file doesn't yet exist.
This is a deliberate feature that allows you to provide your own 
encoding vector, e.g. if your fonts use non-standard glyph names for ornaments.
.PP
These commands are only generated for shapes and number styles
that actually exist; no commands are generated for shapes and styles
that don't exist, or whose generation has been turned off.
Please note that these commands are built on top of \fIfontaxes\fR;
if that package cannot be found, you're limited to using the
lower-level commands from standard \s-1NFSS\s0 (\f(CW\*(C`\efontfamily\*(C'\fR, \f(CW\*(C`\efontseries\*(C'\fR,
\&\f(CW\*(C`\efontshape\*(C'\fR etc.).
.SS "Using multiple font families in one document"
.IX Subsection "Using multiple font families in one document"
If you want to use more than one font family in a document, be aware
that style files generated by versions of \fBautoinst\fR older dan 2009
are incompatible with those generated by newer versions.
.SS "\s-1NFSS\s0 codes"
.IX Subsection "NFSS codes"
\&\s-1NFSS\s0 identifies fonts by a combination of family, series (weight plus width),
shape and size.
\&\fBautoinst\fR parses the output of \f(CW\*(C`otfinfo \-\-info\*(C'\fR to determine
these parameters. When this fails
(e.g., because the font family contains uncommon widths or weights),
\&\fBautoinst\fR ends up with different fonts having the \fIsame\fR values
for the font parameters, which means that these fonts cannot be used in \s-1NFSS\s0.
\&\fBautoinst\fR will then split the font family into multiple subfamilies
(based on each font file's \*(L"Subfamily\*(R" value) and try again.
(Since many font families misunderstand the \*(L"Subfamily\*(R" concept 
and make each font file a separate subfamily, 
this strategy is only used as a last resort.)
.PP
If this proliferation of font families is unwanted,
either run \fBautoinst\fR on a smaller set of fonts (omitting the ones that
failed to parse correctly)
or else add the missing widths, weights and shapes to the tables \f(CW%FD_WIDTH\fR,
\&\f(CW%FD_WEIGHT\fR and \f(CW%FD_SHAPE\fR, near the top of the source code.
Please also send a bug report (see \s-1AUTHOR\s0 below).
.PP
\&\fBautoinst\fR maps widths, weights and shapes to \s-1NFSS\s0 codes using
the following tables. These are based both on the standard \fIFontname\fR scheme
and on the tables in Philipp Lehman's \fIFont Installation Guide\fR,
but some changes had to be made to avoid name clashes in font families
with many different widths and weights.
.PP
.Vb 1
\&    WEIGHT                              WIDTH
\&
\&    Thin           t                    Ultra Compressed    up
\&    Ultra Light    ul                   Extra Compressed    ep
\&    Extra Light    el                   Compressed, Compact p
\&    Light          l                    Compact             p
\&    Book                 [1]            Ultra Condensed     uc
\&    Regular              [1]            Extra Condensed     ec
\&    Medium         mb                   Condensed           c
\&    Demibold       db                   Narrow              n
\&    Semibold       sb                   Semicondensed       sc
\&    Bold           b                    Regular                 [1]
\&    Extra Bold     eb                   Semiextended        sx
\&    Ultra          ub                   Extended            x
\&    Ultra Bold     ub                   Expanded            e
\&    Black          k                    Wide                w
\&    Extra Black    ek
\&    Ultra Black    uk
\&    Heavy          h                    SHAPE
\&    Poster         r
\&                                        Roman, Upright      n   [2]
\&                                        Italic              it
\&                                        Cursive, Kursiv     it
\&                                        Oblique, Slanted    it  [3]
\&                                        Incline(d)          it  [3]
.Ve
.PP
\fINotes:\fR
.IX Subsection "Notes:"
.IP "[1]" 4
.IX Item "[1]"
When \fIboth\fR weight and width are empty, the \*(L"series\*(R" attribute becomes \*(L"m\*(R".
.IP "[2]" 4
.IX Item "[2]"
Adobe Silentium Pro contains two \*(L"Roman\*(R" shapes (\*(L"RomanI\*(R" and \*(L"RomanII\*(R");
the first of these is mapped to \*(L"n\*(R", the second one to \*(L"it\*(R".
.IP "[3]" 4
.IX Item "[3]"
Mapping the \*(L"Slanted\*(R", \*(L"Oblique\*(R" or \*(L"Inclined\*(R" shape to \*(L"it\*(R" instead of \*(L"sl\*(R"
simplifies \fBautoinst\fR. Since font families with both italic and slanted
shapes do \- to the best of my knowledge \- not exist
(apart from Computer Modern, of course),
this shouldn't cause problems in real life.
.SS "A note for MiKTeX users"
.IX Subsection "A note for MiKTeX users"
Automatically installing the fonts into a suitable \s-1TEXMF\s0 tree
(as \fBautoinst\fR does by default) requires a TeX-installation that uses
the \fIkpathsea\fR library; with TeX distributions that implement their
own directory searching (such as MiKTeX), \fBautoinst\fR will complain that
it cannot find the \fIkpsewhich\fR program and install all generated files
into subdirectories of the current directory.
If you use such a TeX distribution, you should either move these files
to their correct destinations by hand, or use the \fI\-target\fR option
(see \*(L"COMMAND-LINE \s-1OPTIONS\s0\*(R" below) to specify a \s-1TEXMF\s0 tree.
.PP
Also, some OpenType fonts lead to \fIpl\fR and \fIvpl\fR files that
are too big for MiKTeX's \fIpltotf\fR and \fIvptovf\fR;
the versions that come with W32TeX (\fIhttp://www.w32tex.org\fR)
and TeXLive (\fIhttp://tug.org/texlive\fR) don't have this problem.
.SH "COMMAND-LINE OPTIONS"
.IX Header "COMMAND-LINE OPTIONS"
You may use either one or two dashes before options,
and option names may be shortened to a unique prefix
(e.g., \fB\-encoding\fR may be abbreviated to \fB\-enc\fR or even \fB\-en\fR,
but \fB\-e\fR is ambiguous (\fB\-encoding\fR, \fB\-extra\fR).
.IP "\fB\-encoding\fR=\fIencoding[,encoding]\fR" 4
.IX Item "-encoding=encoding[,encoding]"
Use the specified encodings for the text fonts. The default is \*(L"\s-1OT1\s0,T1,LY1\*(R".
For each encoding, a file \fI<encoding>.enc\fR (in all \fIlowercase\fR)
should be somewhere where \fIotftotfm\fR can find it. Suitable encoding files
for \s-1OT1\s0, T1/TS1 and \s-1LY1\s0 come with \fBautoinst\fR. (Note that these files are
called \fIfontools_ot1.enc\fR etc. to avoid name clashes with other packages;
the \*(L"fontools_\*(R" prefix doesn't need to be specified.)
.Sp
Multiple text encodings can be specified as a comma-separated list:
\&\f(CW\*(C`\-encoding=OT1,T1\*(C'\fR. The encodings are passed to \fIfontenc\fR in the order
specified, so the last one will be the default text encoding.
.IP "\fB\-sanserif\fR" 4
.IX Item "-sanserif"
Install the font as a sanserif font, accessed via \f(CW\*(C`\esffamily\*(C'\fR and \f(CW\*(C`\etextsf\*(C'\fR.
Note that the generated style file redefines \f(CW\*(C`\efamilydefault\*(C'\fR,
so including it will still make this font the default text font.
.IP "\fB\-typewriter\fR" 4
.IX Item "-typewriter"
Install the font as a typewriter font, accessed via \f(CW\*(C`\ettfamily\*(C'\fR and
\&\f(CW\*(C`\etexttt\*(C'\fR.
Note that the generated style file redefines \f(CW\*(C`\efamilydefault\*(C'\fR,
so including it will still make this font the default text font.
.IP "\fB\-ts1\fR" 4
.IX Item "-ts1"
.PD 0
.IP "\fB\-nots1\fR" 4
.IX Item "-nots1"
.PD
Turn the creation of TS1\-encoded fonts on or off. The default is \fB\-ts1\fR
if the text encodings (see \fI\-encoding\fR above) include T1,
\&\fB\-nots1\fR otherwise.
.IP "\fB\-smallcaps\fR" 4
.IX Item "-smallcaps"
.PD 0
.IP "\fB\-nosmallcaps\fR" 4
.IX Item "-nosmallcaps"
.PD
Turn the creation of small caps fonts on or off. The default is
\&\fB\-smallcaps\fR.
.IP "\fB\-swash\fR" 4
.IX Item "-swash"
.PD 0
.IP "\fB\-noswash\fR" 4
.IX Item "-noswash"
.PD
Turn the creation of swash fonts on or off. The default is \fB\-swash\fR.
.IP "\fB\-titling\fR" 4
.IX Item "-titling"
.PD 0
.IP "\fB\-notitling\fR" 4
.IX Item "-notitling"
.PD
Turn the creation of titling fonts on or off. The default is \fB\-titling\fR.
.IP "\fB\-superiors\fR" 4
.IX Item "-superiors"
.PD 0
.IP "\fB\-nosuperiors\fR" 4
.IX Item "-nosuperiors"
.PD
Turn the creation of fonts with superior characters on or off.
The default is \fB\-superiors\fR.
.IP "\fB\-inferiors\fR" 4
.IX Item "-inferiors"
.PD 0
.IP "\fB\-noinferiors\fR" 4
.IX Item "-noinferiors"
.PD
Turn the creation of fonts with inferior digits on or off.
The default is \fB\-noinferiors\fR.
.IP "\fB\-fractions\fR" 4
.IX Item "-fractions"
.PD 0
.IP "\fB\-nofractions\fR" 4
.IX Item "-nofractions"
.PD
Turn the creation of fonts with numerators and denominators on or off.
The default is \fB\-nofractions\fR.
.IP "\fB\-ornaments\fR" 4
.IX Item "-ornaments"
.PD 0
.IP "\fB\-noornaments\fR" 4
.IX Item "-noornaments"
.PD
Turn the creation of ornament fonts on or off. The default is \fB\-ornaments\fR.
.IP "\fB\-verbose\fR" 4
.IX Item "-verbose"
Verbose mode; print detailed info about what \fBautoinst\fR thinks it's doing.
.IP "\fB\-extra\fR=\fItext\fR" 4
.IX Item "-extra=text"
Pass \fItext\fR as options to \fIotftotfm\fR. To prevent \fItext\fR from accidentily
being interpreted as options to \fBautoinst\fR, it should be properly quoted.
.IP "\fB\-figurekern\fR" 4
.IX Item "-figurekern"
.PD 0
.IP "\fB\-nofigurekern\fR" 4
.IX Item "-nofigurekern"
.PD
Some fonts provide kerning pairs for tabular figures.
This is probably unwanted (e.g., numbers in tables won't line up exactly).
The option \fB\-nofigurekern\fR adds extra \fI \-\-ligkern\fR options
to the command lines for \fIotftotfm\fR to suppress such kerns
(but only for the \*(L"\s-1TLF\s0\*(R" and \*(L"TOsF\*(R" families).
Since this leads to very long command lines (it adds one hundred such options)
and the problem affects only few fonts, the default is \fB\-figurekern\fR.
.IP "\fB\-manual\fR" 4
.IX Item "-manual"
Manual mode. By default, \fBautoinst\fR executes all \fIotftotfm\fR
command lines it generates; with the \fB\-manual\fR option, these commands are
instead written to a file \fIautoinst.bat\fR.
Also, the generated \fIotftotfm\fR command lines specify the \fI \-\-pl\fR option
(which tells \fIotftotfm\fR to generate readable/editable \fIpl\fR and \fIvpl\fR files
instead of the default \fItfm\fR and \fIvf\fR files)
and leave out the \fI \-\-automatic\fR option (which tells \fIotftotfm\fR to
leave all generated files in the current directory, rather than install
them into your \s-1TEXMF\s0 tree).
.Sp
When using this option, you should run \fIpltotf\fR and \fIvptovf\fR after
executing all commands,
to convert the \fIpl\fR and \fIvf\fR files to \fItfm\fR and \fIvf\fR format.
.PP
The following options are only meaningful in automatic mode,
and hence ignored in manual mode:
.IP "\fB\-target\fR=\fI\s-1DIRECTORY\s0\fR" 4
.IX Item "-target=DIRECTORY"
Install all generated files into the \s-1TEXMF\s0 tree at \fI\s-1DIRECTORY\s0\fR.
.Sp
By default, \fBautoinst\fR searches your \f(CW$TEXMFLOCAL\fR and \f(CW$TEXMFHOME\fR paths
and installs all files into subdirectories of the first writable \s-1TEXMF\s0 tree
it finds (or into subdirectories of the current directory,
if no writable directory is found).
.IP "\fB\-vendor\fR=\fI\s-1VENDOR\s0\fR" 4
.IX Item "-vendor=VENDOR"
.PD 0
.IP "\fB\-typeface\fR=\fI\s-1TYPEFACE\s0\fR" 4
.IX Item "-typeface=TYPEFACE"
.PD
These options are equivalent to \fIotftotfm\fR's \fI \-\-vendor\fR and \fI \-\-typeface\fR
options: they change the \*(L"vendor\*(R" and \*(L"typeface\*(R" parts of the names of the
subdirectories in the \s-1TEXMF\s0 tree where generated files will be stored. 
The default values are \*(L"lcdftools\*(R" and the font's FontFamily name.
.Sp
Please note that these options change \fIonly\fR directory names, 
not the names of any generated files.
.IP "\fB\-updmap\fR" 4
.IX Item "-updmap"
.PD 0
.IP "\fB\-noupdmap\fR" 4
.IX Item "-noupdmap"
.PD
Control whether or not \fIupdmap\fR is called after the last call to \fIotftotfm\fR.
The default is \fB\-updmap\fR.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Eddie Kohler's TypeTools (\fIhttp://www.lcdf.org/type\fR).
.PP
Perl is pre-installed on most Linux and Unix systems;
on Windows, try ActiveState's ActivePerl
(available from \fIhttp://www.activestate.com\fR)
or Strawberry Perl (\fIhttp://strawberryperl.com\fR).
.PP
XeTeX (\fIhttp://www.tug.org/xetex\fR) and LuaTeX (\fIhttp://www.luatex.org\fR)
are TeX extensions that can use any font (including both flavours of OpenType)
without TeX-specific support files.
.PP
The FontPro project (\fIhttps://github.com/sebschub/FontPro\fR)
offers very complete support for Adobe's Minion Pro and Myriad Pro
(including math), and is currently working on Cronos Pro as well.
.PP
John Owens' \fIotfinst\fR (available from \s-1CTAN\s0) is another wrapper
around \fIotftotfm\fR, and may work for you when \fBautoinst\fR doesn't.
.SH "AUTHOR"
.IX Header "AUTHOR"
Marc Penninga <marcpenninga@gmail.com>
.PP
When sending a bug report, please give as much relevant information as
possible; this includes at least (but may not be limited to) the output
from running \fBautoinst\fR with the \fI\-verbose\fR option.
Please make sure that this output includes all (if any) error messages.
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (C) 2005\-2012 Marc Penninga.
.SH "LICENSE"
.IX Header "LICENSE"
This program is free software; you can redistribute it and/or modify
it under the terms of the \s-1GNU\s0 General Public License as published
by the Free Software Foundation, either version 2 of the License,
or (at your option) any later version.
A copy of the \s-1GNU\s0 General Public License is included with \fBautoinst\fR;
see the file \fIGPLv2.txt\fR.
.SH "DISCLAIMER"
.IX Header "DISCLAIMER"
This program is distributed in the hope that it will be useful,
but \s-1WITHOUT\s0 \s-1ANY\s0 \s-1WARRANTY\s0; without even the implied warranty of
\&\s-1MERCHANTABILITY\s0 or \s-1FITNESS\s0 \s-1FOR\s0 A \s-1PARTICULAR\s0 \s-1PURPOSE\s0. See the
\&\s-1GNU\s0 General Public License for more details.
.SH "RECENT CHANGES"
.IX Header "RECENT CHANGES"
(See the source code for the rest of the story.)
.IP "\fI2012\-10\-25\fR" 12
.IX Item "2012-10-25"
Added extra \*(L"ssub\*(R" rules to the \fIfd\fR files that substitute italic
shapes for slanted ones.
.IP "\fI2012\-09\-25\fR" 12
.IX Item "2012-09-25"
Added the \fI\-vendor\fR, \fI\-typeface\fR and \fI\-(no)updmap\fR command line options.
.IP "\fI2012\-07\-06\fR" 12
.IX Item "2012-07-06"
Documentation update.
.IP "\fI2012\-03\-06\fR" 12
.IX Item "2012-03-06"
Implemented the \*(L"splitting the font family into multiple subfamilies\*(R"
emergency strategy when font info parsing fails.
Added recognition for a number of unusual widths, weights and shapes.
.IP "\fI2012\-02\-29\fR" 12
.IX Item "2012-02-29"
Fixed a bug in the font parsing code,
where possible widths, weights and shapes where tested in the wrong order;
this led to \*(L"ExtraLight\*(R" fonts being recognised as \*(L"Light\*(R".
Added recognition for \*(L"Narrow\*(R" and \*(L"Wide\*(R" widths.
Also added the \fI\-(no)figurekern\fR command-line option.
.IP "\fI2012\-02\-01\fR" 12
.IX Item "2012-02-01"
Reorganised the code, and fixed some bugs in the process.
Added the \fI\-target\fR command-line option.
Made \fBautoinst\fR install the \fIfd\fR and \fIsty\fR files in
the same \s-1TEXMF\s0 tree as the other generated files.
Generate \s-1OT1\s0, T1 and \s-1LY1\s0 encoded text fonts by default.
Made \fI\-titling\fR a default option (instead of \fI\-notitling\fR).
Updated the documentation.
